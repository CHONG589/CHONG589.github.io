{"title":"scanf相关知识","date":"2024-01-30T07:08:35.000Z","date_formatted":{"ll":"2024年1月30日","L":"2024/01/30","MM-DD":"01-30"},"link":"2024/scanf相关知识","comments":true,"updated":"2024-01-30T07:14:45.049Z","content":"<p><strong>1.</strong> scanf 里面不能像 printf那样在里面输入 \\n,因为在 scanf 中你在里面写了什么，在输入的时候你要原模原样的输入回去。<br>\n例：</p>\n<span id=\"more\"></span>\n<ul>\n<li><code>scacnf(&quot;%d,%d&quot;,&amp;i,&amp;j);</code><br>\n这时你输入 i 和 j 时中间就要输入逗号才能正确输入。</li>\n<li><code>scanf(&quot;%d %d&quot;,&amp;i,&amp;j);</code><br>\n这时你就要在输入 i 和 j 的中间要加上一个空格。</li>\n<li><code>scanf(&quot;%d\\n&quot;,&amp;i);</code><br>\n这时你在输入 i 后还要输入 \\n 才能结束。</li>\n<li>如果你在里面没有输入其他，如:<br>\n<code>scanf(&quot;%d%d&quot;,&amp;i,&amp;j);</code><br>\n则你输入 i 和 j 时的间隔符可以是空格、回车、Tab。</li>\n</ul>\n<p><strong>2.</strong> scanf 在用 %s 输入字符串时，输入的字符串中<strong>不能有空格、Tab、回车键</strong>等，它会作为当前输入的结束，即空格、Tab、回车键后面的字符不会再输入进去。</p>\n<ul>\n<li>用 %s 也是非常危险的操作，当你输入的字符串超过了接收数组容量时，它不会报错，而是原样输入进去，这样就发生了<strong>越界</strong>现象，使之存到了这个数组之外的空间中</li>\n<li>scanf 会返回一个值，当你在 scanf中输入两个值时，<code>scanf(&quot;%d%d&quot;,&amp;i,&amp;j);</code>如果正确输入，则会返回2，若输入错误，则返回不是2的值。所以它在放入循环中时要进行输入是否正确判断，若输入的格式不对，如本来要输入整型值的你输入字符类型，那么你输入错误，则会从你上一次输入的值中取。  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(1)&#123;</span><br><span class=\"line\">    int ret scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">    if(ret != 1)</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    printf(&quot;i = %d\\n&quot;,i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n如果你没进行判断跳出，只要中间你输入一个错误，它就会一直输出你上一次输入的值，一直死循环。</li>\n</ul>\n<p><strong>3. 在用连续的 scanf 时，输入一个字符后，按回车确定的回车符会被下一个 scanf 吸收。（常常会在循环中遇到这种问题，导致出错）</strong></p>\n<ul>\n<li>当在连续两个 scanf 使用时  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">scanf(&quot;%d&quot;,&amp;j);</span><br></pre></td></tr></table></figure>\n这样输入时，你输入第一个值 i 时，然后回车确定，再输入 j 时，此时 j 接收的是回车符。可以用 getchra() 吃掉一个回车符。  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scanf(&quot;%d&quot;,&amp;i);</span><br><span class=\"line\">getchar();</span><br><span class=\"line\">scanf(&quot;%d&quot;,&amp;j);</span><br></pre></td></tr></table></figure>\n故在用循环里面套 scanf 一个一个数值输入时，由于输入完一个按回车确定，再输入下一个值时，中间过程中，一定要用一个 getchar() 吸收掉回车符。</li>\n</ul>\n","prev":{"title":"static","link":"2024/static"},"next":{"title":"编程注意的问题","link":"2024/编程注意的问题"},"plink":"https://CHONG589.github.io/2024/scanf相关知识/","reward":true,"copyright":{"author":"Chong","link":"<a href=\"https://CHONG589.github.io/2024/scanf相关知识/\" title=\"scanf相关知识\">https://CHONG589.github.io/2024/scanf相关知识/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}