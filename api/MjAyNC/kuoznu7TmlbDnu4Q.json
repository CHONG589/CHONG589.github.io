{"title":"二维数组","date":"2024-02-02T12:18:01.000Z","date_formatted":{"ll":"2024年2月2日","L":"2024/02/02","MM-DD":"02-02"},"author":"Chong","thumbnail":"2024/二维数组/./thumb.png","link":"2024/二维数组","comments":true,"updated":"2024-12-25T06:58:35.000Z","content":"<h3 id=\"二维数组的分配\">二维数组的分配<a title=\"#二维数组的分配\" href=\"#二维数组的分配\"></a></h3>\n<p>假设要为一个 m * n 的数组分配内存空间</p>\n<h4 id=\"1.-一次分配\">1. 一次分配<a title=\"#1.-一次分配\" href=\"#1.-一次分配\"></a></h4>\n<p><img src=\"/2024/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/1.png\" alt class=\"φcx\"></p>\n<p>这种分配就是把它当作一维数组来分配，通过 i 和 j 的值，计算出具体位置。该分配的内存必须是连续的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int *arr = (int *)malloc(sizeof(int) * m * n);</span><br><span class=\"line\"></span><br><span class=\"line\">for(int i = 0; i &lt; m; i ++)&#123;</span><br><span class=\"line\">    for(int j = 0; j &lt; n; j ++)&#123;</span><br><span class=\"line\">        arr[i * n + j] = 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>注意每个元素的下标和 i 、j 的关系</strong></p>\n<h3 id=\"#2.-二次分配\">#2. 二次分配<a title=\"##2.-二次分配\" href=\"##2.-二次分配\"></a></h3>\n<p><img src=\"/2024/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84/2.png\" alt class=\"φcx\"></p>\n<p>首先分配一个指针数组 <code>*arr[i]</code>,以行为单位，一行表示一个指针，该指针数组中的每个元素都是一个数组指针，该指针又指向一个一维数组。<strong>后面再对该数组指针分配内存空间</strong>(即对一维数组分配)，这种二维内存的分配是分两次来分配的，因此分配的内存是不连续的。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 为指针数组分配内存</span><br><span class=\"line\">int **arr = (int **)malloc(sizeof(int *) * m);</span><br><span class=\"line\">// 为每个指向数组的指针分配空间，即每个指针只需一个指针变量接收，共有 m 个。</span><br><span class=\"line\"></span><br><span class=\"line\">// 再为每个指针数组分配内存空间</span><br><span class=\"line\">for(int i = 0; i &lt; m; i ++)&#123;</span><br><span class=\"line\">    arr[i] = (int *)malloc(sizeof(int) * n);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"构造类型","link":"2024/构造类型"},"next":{"title":"环境变量","link":"2024/环境变量"},"plink":"https://CHONG589.github.io/2024/二维数组/"}