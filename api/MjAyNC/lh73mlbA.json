{"title":"函数","date":"2024-02-02T14:01:05.000Z","date_formatted":{"ll":"2024年2月2日","L":"2024/02/02","MM-DD":"02-02"},"author":"Chong","thumbnail":"2024/函数/./thumb.png","link":"2024/函数","comments":true,"updated":"2025-04-10T07:58:27.725Z","content":"<h1 id=\"定义\">定义<a title=\"#定义\" href=\"#定义\"></a></h1>\n<blockquote>\n<p>数据类型 函数名 (形参说明)</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>argc 是一个计数器，计算从终端传了多少个参数过来。argv[] 是一个列表，用来保存传过来的参数。</p>\n<h1 id=\"函数的传参\">函数的传参<a title=\"#函数的传参\" href=\"#函数的传参\"></a></h1>\n<ul>\n<li>值传参</li>\n<li>地址传参</li>\n<li>全局变量</li>\n</ul>\n<h1 id=\"函数的调用\">函数的调用<a title=\"#函数的调用\" href=\"#函数的调用\"></a></h1>\n<h2 id=\"嵌套调用\">嵌套调用<a title=\"#嵌套调用\" href=\"#嵌套调用\"></a></h2>\n<h2 id=\"递归调用-(面试常考，非常考验编程功底)\">递归调用 (面试常考，非常考验编程功底)<a title=\"#递归调用-(面试常考，非常考验编程功底)\" href=\"#递归调用-(面试常考，非常考验编程功底)\"></a></h2>\n<h3 id=\"阶乘\">阶乘<a title=\"#阶乘\" href=\"#阶乘\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">func</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//递归出口</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n == <span class=\"number\">0</span> || n == <span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> n * func (n - <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"type\">int</span> res;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">\tres = func(n);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d! = %d\\n&quot;</span>,n,res);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"斐波那契数列\">斐波那契数列<a title=\"#斐波那契数列\" href=\"#斐波那契数列\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1, 1, 2, 3, 5, 8, 13, 21, 34......</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//n = (n - 1) + (n - 2)</span></span><br><span class=\"line\"><span class=\"comment\">//(n == 1 || n == 2)  ---&gt;   return 1;  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">fib</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n == <span class=\"number\">1</span> || n == <span class=\"number\">2</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fib(n - <span class=\"number\">1</span>) + fib(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\t<span class=\"type\">int</span> res;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;请输入你要求的斐波那契数列的项数：\\n&quot;</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\"></span><br><span class=\"line\">\tres = fib(n);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;fib[%d] = %d\\n&quot;</span>,n,res);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"函数与数组\">函数与数组<a title=\"#函数与数组\" href=\"#函数与数组\"></a></h1>\n<h2 id=\"数组传参方式\">数组传参方式<a title=\"#数组传参方式\" href=\"#数组传参方式\"></a></h2>\n<p>传参时传的是数组的首地址，所以还要传数组的大小。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">print_arr</span><span class=\"params\">(<span class=\"type\">int</span> *p, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, p[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> a[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">6</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprint_arr(a, <span class=\"keyword\">sizeof</span>(a) / <span class=\"keyword\">sizeof</span>(*a));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在 print_arr 函数中，接收数组的是一个指针变量，也就是接收的是数组首地址，实际上这个函数是不知道数组的大小的，只知道数组首地址，而在定义函数时用 <code>sizeof(p) / sizeof(*p)</code> 是不可行的，sizeof§ 肯定是 8 字节 (在 64 位机器中)，这是固定的，这算出来的是接收地址的指针变量的大小，并不是数组的大小。所以在传参时要传数组的大小。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">print_arr</span> <span class=\"params\">(<span class=\"type\">int</span> p[], <span class=\"type\">int</span> n)</span></span><br></pre></td></tr></table></figure>\n<p><strong>数组退化成指针</strong>：定义时这样写成数组的形式，看似好像是把整个数组传过去了，实则不然，它的含义仍然是指针变量，跟上面是一样的。</p>\n<p>所以在形参中定义成数组的形式和在 main 函数中定义时是不一样的，作为形参时，它就是指针变量。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a[N] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> *p = a;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//下面是传入实参时，形参对应接收的类型</span></span><br><span class=\"line\">实参： a      *a     a[<span class=\"number\">0</span>]    &amp;a[<span class=\"number\">3</span>]    p[i]    p      *p       p+<span class=\"number\">1</span></span><br><span class=\"line\">\t\t\t\t   *(a+<span class=\"number\">0</span>)           *(p+i)         *(p+<span class=\"number\">0</span>)</span><br><span class=\"line\">形参：<span class=\"type\">int</span> *   <span class=\"type\">int</span>    <span class=\"type\">int</span>     <span class=\"type\">int</span> *    <span class=\"type\">int</span>     <span class=\"type\">int</span>*   <span class=\"type\">int</span>      <span class=\"type\">int</span>*     </span><br></pre></td></tr></table></figure>\n<h2 id=\"数组逆序实现\">数组逆序实现<a title=\"#数组逆序实现\" href=\"#数组逆序实现\"></a></h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">func</span> <span class=\"params\">(<span class=\"type\">int</span> *a, <span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j, tmp, mid;</span><br><span class=\"line\"></span><br><span class=\"line\">\tmid = (n - <span class=\"number\">1</span>) / <span class=\"number\">2</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt;= mid; i++)&#123;</span><br><span class=\"line\">\t\tj = n - <span class=\"number\">1</span> -i;</span><br><span class=\"line\">\t\ttmp = a[i];</span><br><span class=\"line\">\t\ta[i] = a[j];</span><br><span class=\"line\">\t\ta[j] = tmp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> a[] = &#123;<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">7</span>, <span class=\"number\">9</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//puts(a);     puts 是用于输出 char * </span></span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">sizeof</span>(a) / <span class=\"keyword\">sizeof</span>(*a); i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, a[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tfunc(a, <span class=\"keyword\">sizeof</span>(a) / <span class=\"keyword\">sizeof</span>(*a));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">sizeof</span>(a) / <span class=\"keyword\">sizeof</span>(*a); i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, a[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数与二维数组\">函数与二维数组<a title=\"#函数与二维数组\" href=\"#函数与二维数组\"></a></h2>\n<h3 id=\"方式一：\">方式一：<a title=\"#方式一：\" href=\"#方式一：\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> M   3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N   4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">print_arr</span> <span class=\"params\">(<span class=\"type\">int</span> *p, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, p[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果 print_arr 直接传 a，那么在形参中定义时是这样：int (*p)[N]。</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tprint_arr(&amp;a[<span class=\"number\">0</span>][<span class=\"number\">0</span>], M * N);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意这里函数的形参采用的是一级指针接收，传入的实参不能直接传 a, a 为二维数组，为行指针，一级指针只能在列指针中移动，所以实参应转化为列指针 <code>&amp;a[0][0]</code> 传入, 把二维数组当成一个大的一维数组，个数为 <code>M * N</code> 。这里 <code>&amp;a[0][0]</code> 还可以为 <code>*a 、a[0]、*(a + 0)</code>。</p>\n<h3 id=\"方式二：\">方式二：<a title=\"#方式二：\" href=\"#方式二：\"></a></h3>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> M   3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N   4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//二维数组 a 的本质就是一个数组指针，指向数组的指针</span></span><br><span class=\"line\"><span class=\"comment\">//void print_arr(int p[][N], int m, int n)</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">print_arr</span> <span class=\"params\">(<span class=\"type\">int</span> (*p)[N], <span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;      </span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//结果为：8，所以也是一个指针变量，不过这个指向的是一个数组，数组大小为 N 个元素</span></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sizeof(p) = %d\\n&quot;</span>, <span class=\"keyword\">sizeof</span>(p));   </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%4d &quot;</span>, *(*(p + i) + j)); </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//printf(&quot;%4d &quot;, p[i][j]);     </span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;sizeof(a) = %d\\n&quot;</span>,<span class=\"keyword\">sizeof</span>(a));      <span class=\"comment\">// 结果为 48</span></span><br><span class=\"line\">\tprint_arr(a, M, N);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果想在实参中传入一个二维数组，而不是把它当成一维数组传入，那么在函数定义时的形参中要有与二维数组相对应的类型，前面已学过 <strong>二维数组的本质就是数组指针</strong>，所以要接收一个二维数组，就应该在形参中用数组指针接收，a + 1 和 p + 1 效果是一样的，都是行指针。<code>int (*p)[N]</code> 中 N 为二维数组的列数。将二维数组接收过来后，对应的行数和列数也接收过来了，接下来就跟平时处理二维数组时一样。</p>\n<p>同样，跟一维数组一样，传过来的数组，接收的是首地址，同样不知道大小，所以还要传大小参数。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> a[M][N] = &#123;&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> *p = *a;</span><br><span class=\"line\"><span class=\"type\">int</span> (*q)[N] = a;</span><br><span class=\"line\"></span><br><span class=\"line\">实参：a[i][j]  *(a+i)+j   a[i]+j   p[i]   *p    q[i][j]    *q       q           p+<span class=\"number\">3</span>\t\t\t\t\t\t\t\t\t\t\t</span><br><span class=\"line\">形参：<span class=\"type\">int</span>       <span class=\"type\">int</span>*       <span class=\"type\">int</span>*    <span class=\"type\">int</span>    <span class=\"type\">int</span>    <span class=\"type\">int</span>       <span class=\"type\">int</span>*   <span class=\"title function_\">int</span> <span class=\"params\">(*)</span>[N]    <span class=\"type\">int</span>*    </span><br></pre></td></tr></table></figure>\n<h3 id=\"练习题\">练习题<a title=\"#练习题\" href=\"#练习题\"></a></h3>\n<h4 id=\"求每个学生的平均成绩\">求每个学生的平均成绩<a title=\"#求每个学生的平均成绩\" href=\"#求每个学生的平均成绩\"></a></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> M   3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N   5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">print_arr</span> <span class=\"params\">(<span class=\"type\">float</span> (*p)[N], <span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;  科目一  科目二  科目三   科目四  平均\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%7.2f &quot;</span>, *(*(p + i) + j));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 求每个学生的平均成绩，并把平均成绩写在后面</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">average</span> <span class=\"params\">(<span class=\"type\">float</span> (*p)[N], <span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">float</span> tmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>; j &lt; n; j++)&#123;</span><br><span class=\"line\">\t\t\ttmp += p[i][j]; </span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tp[i][<span class=\"number\">4</span>] = tmp / (N - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">float</span> a[M][N] = &#123;&#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>&#125;, &#123;<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>&#125;, &#123;<span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\taverage(a, M, N);</span><br><span class=\"line\">\tprint_arr(a, M, N);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2024/%E5%87%BD%E6%95%B0/1.png\" alt class=\"φcx\"></p>\n<h4 id=\"求总平均成绩和把指定学生的四科成绩打印出来\">求总平均成绩和把指定学生的四科成绩打印出来<a title=\"#求总平均成绩和把指定学生的四科成绩打印出来\" href=\"#求总平均成绩和把指定学生的四科成绩打印出来\"></a></h4>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> M   3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N   4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">float</span> <span class=\"title function_\">average_scope</span><span class=\"params\">(<span class=\"type\">int</span> *p, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">\t<span class=\"type\">float</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\tsum += p[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum / n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">find_num</span><span class=\"params\">(<span class=\"type\">int</span> (*p)[N], <span class=\"type\">int</span> num)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, *(*(p + num) + i));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">\t<span class=\"type\">int</span> i, j;</span><br><span class=\"line\">\t<span class=\"type\">float</span> ave;</span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tave = average_scope(*a, M * N);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;ave = %.2f\\n&quot;</span>, ave);</span><br><span class=\"line\"></span><br><span class=\"line\">\tfind_num(a, num);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数与字符数组\">函数与字符数组<a title=\"#函数与字符数组\" href=\"#函数与字符数组\"></a></h2>\n<p>[[05_字符串]]</p>\n<h1 id=\"函数与指针\">函数与指针<a title=\"#函数与指针\" href=\"#函数与指针\"></a></h1>\n<h2 id=\"指针函数-(返回值为指针)\">指针函数 (返回值为指针)<a title=\"#指针函数-(返回值为指针)\" href=\"#指针函数-(返回值为指针)\"></a></h2>\n<p>根据 Type name 可知，指针函数是定义函数，所以为</p>\n<blockquote>\n<p>定义形式：返回值 函数名 (形参)  如：<code>int *fun (int)</code></p>\n</blockquote>\n<p>用途：例如前面 find_num 的实现，它只让你找到第几个学生的成绩，并没有让你输出，你却遍历输出那个学生的成绩，显然不是最完美的解决方案，这时就可以用返回一个指向函数的指针。</p>\n<p>理论上的实现方式 (返回了整个数组)：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> (*)[N] find_num (<span class=\"type\">int</span> (*p)[N], <span class=\"type\">int</span> num) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (p + num);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>把指针 p 移动到第 num 的学生的位置，由于 p 为行指针，所以理论上要这样写返回值就也要为对应的类型，即也要行指针，所以返回值为 <code>int (*)[N]</code>，但是我们就只是想要得到第 num 行的那些数据，根本不需整个二维数组的形式返回来，只需在 num 行使用列指针即可，所以可以这样：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> M   3</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N   4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> * <span class=\"title function_\">find_num</span> <span class=\"params\">(<span class=\"type\">int</span> (*p)[N], <span class=\"type\">int</span> num)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (num &gt; M - <span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;       <span class=\"comment\">// 不能写 -1，因为返回类型为指针</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> *(p + num);     <span class=\"comment\">// 也可 p[num];</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> a[M][N] = &#123;<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>, <span class=\"number\">12</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> i, j;</span><br><span class=\"line\">    <span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> *res;</span><br><span class=\"line\"></span><br><span class=\"line\">    res = find_num(a, num);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res != <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; N; i++)</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, res[i]);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Can not find!\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"函数指针\">函数指针<a title=\"#函数指针\" href=\"#函数指针\"></a></h2>\n<p>记忆：整型指针为指针指向整型，那么函数指针自然就是指向函数的指针。</p>\n<p>根据 Type name 可知，函数指针是定义指针，所以为</p>\n<blockquote>\n<p>定义形式：<code>类型 (*指针名)(形参)</code>  如: `int (*p)(int);</p>\n</blockquote>\n<blockquote>\n<p>类型：int (int) --&gt; 函数和形参的类型，即返回类型。<br>\nname:  <code>*p</code> ，即定义指针<br>\n两个合起来就为 <code>int (*p)(int);</code>，即函数指针。</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add</span> <span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> a = <span class=\"number\">3</span>, b = <span class=\"number\">5</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> ret;</span><br><span class=\"line\">    <span class=\"type\">int</span> (*p) (<span class=\"type\">int</span>, <span class=\"type\">int</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    p = add;            <span class=\"comment\">// 也可 p = &amp;add; 函数名跟数组名一样，就是个地址</span></span><br><span class=\"line\">    <span class=\"comment\">//ret = add(a, b);  // 原来的写法</span></span><br><span class=\"line\">    ret = p(a, b);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%d\\n&quot;</span>, ret);  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"函数指针数组\">函数指针数组<a title=\"#函数指针数组\" href=\"#函数指针数组\"></a></h2>\n<blockquote>\n<p>指针数组：数组中每个元素就是一个指针，如：<code>int *arr[N]</code><br>\n函数指针：指向函数的指针，如：<code>int (*p)(int) </code><br>\n函数指针数组：数组中每个元素都是一个指向函数的指针</p>\n</blockquote>\n<p>可以理解为定义指针数组，返回值为一个函数，也可以理解为定义一个数组，返回值为函数指针。</p>\n<blockquote>\n<p>定义：类型 <code>(*数组名[下标])  (形参)</code> 如：<code>int (*arr[N]) (int);</code><br>\n类型：<code>int (int)</code> --&gt; 函数和形参的类型<br>\nname: <code>*arr[N] </code><br>\n两个合起来就为 <code>int (*arr[N])(int);</code></p>\n</blockquote>\n<h2 id=\"指向指针函数的函数指针数组\">指向指针函数的函数指针数组<a title=\"#指向指针函数的函数指针数组\" href=\"#指向指针函数的函数指针数组\"></a></h2>\n<p>这样理解：其实就是函数指针数组，只不过将这个返回值是函数改成返回值为指向函数的指针。</p>\n<blockquote>\n<p>指针数组：<code>*arr[N]</code><br>\n指针函数：<code>int *func(int)</code><br>\n将指针函数改为匿名函数，即 <code>int *(int)</code>，将它作为返回值，即：<code>int *(*arr[N])(int)</code></p>\n</blockquote>\n<h1 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h1>\n<p>自己的理解：为什么不能直接调用函数，而是特地定义指针来，因为函数名是地址常量，函数指针是指针变量，有区别，就跟前面学的指针变量跟数组名一样的区别。</p>\n<p>老师讲解：传参时如果传一个函数名过去(因为可能要用到某函数，将此函数传过去用)，这时形参就要定义一个同类型的来接收。</p>\n<blockquote>\n<p>传整形数     ----&gt;    整型指针接收<br>\n传数组名     ----&gt;    指针接收<br>\n函数名         ----&gt;    指向函数的指针来接收</p>\n</blockquote>\n<p>如：快速排序的封装</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">qsort</span> <span class=\"params\">(<span class=\"type\">void</span> *base, <span class=\"type\">size_t</span> nmemb, <span class=\"type\">size_t</span> size, <span class=\"type\">int</span> (*compar) (<span class=\"type\">const</span> <span class=\"type\">void</span> *, <span class=\"type\">const</span> <span class=\"type\">void</span> *))</span>;</span><br></pre></td></tr></table></figure>\n<p>此方式定义为函数指针，返回值为函数，总之就是为了满足传参的要求，这些函数叫 <strong>回调函数</strong>。</p>\n<blockquote>\n<p><strong>数组指针</strong>：像整型指针为指向整型的指针，而数组指针则为指向数组的指针。</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Type name</span><br><span class=\"line\">Type ---&gt; 数组 ---&gt; <span class=\"type\">int</span>[N]</span><br><span class=\"line\">name ---&gt; 指针 ---&gt; *p</span><br><span class=\"line\">Type name ---&gt; <span class=\"type\">int</span> (*p)[N];</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>指针数组</strong>：数组中每个元素就是一个指针。</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Type ---&gt; <span class=\"type\">int</span> *</span><br><span class=\"line\">name ---&gt; arr[N]</span><br><span class=\"line\">Type name ---&gt; <span class=\"type\">int</span> *arr[N]</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>指针函数</strong>：定义函数</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">返回值 函数名 （形参）</span><br><span class=\"line\">返回值 ---&gt; <span class=\"type\">int</span> *</span><br><span class=\"line\">函数名 ---&gt; func</span><br><span class=\"line\"><span class=\"type\">int</span> *<span class=\"title function_\">func</span><span class=\"params\">(<span class=\"type\">int</span>)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>函数指针</strong>：指向函数的指针，定义指针</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Type name</span><br><span class=\"line\">Type ---&gt; <span class=\"type\">int</span> (<span class=\"type\">int</span>)</span><br><span class=\"line\">name ---&gt; *p</span><br><span class=\"line\"><span class=\"title function_\">int</span> <span class=\"params\">(*p)</span> <span class=\"params\">(<span class=\"type\">int</span>)</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>函数指针数组</strong>：数组中每个元素都是一个指向函数的指针</p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">指针数组：<span class=\"type\">int</span> *arr[N]</span><br><span class=\"line\">函数指针</span><br><span class=\"line\">：<span class=\"type\">int</span> (*p) (<span class=\"type\">int</span>)</span><br><span class=\"line\">只需将函数指针的指针名改为数组的形式就可</span><br><span class=\"line\"><span class=\"type\">int</span> (*arr[N])(<span class=\"type\">int</span>)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>指向指针函数的函数指针数组</strong></p>\n</blockquote>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> *(*func[N])(<span class=\"type\">int</span>)</span><br></pre></td></tr></table></figure>\n","prev":{"title":"构造类型","link":"2024/构造类型"},"next":{"title":"指针与变量","link":"2024/指针与变量"},"plink":"https://CHONG589.github.io/2024/函数/","toc":[{"id":"定义","title":"定义","index":"1"},{"id":"函数的传参","title":"函数的传参","index":"2"},{"id":"函数的调用","title":"函数的调用","index":"3","children":[{"id":"嵌套调用","title":"嵌套调用","index":"3.1"},{"id":"递归调用-(面试常考，非常考验编程功底)","title":"递归调用 (面试常考，非常考验编程功底)","index":"3.2"}]},{"id":"函数与数组","title":"函数与数组","index":"4","children":[{"id":"数组传参方式","title":"数组传参方式","index":"4.1"},{"id":"数组逆序实现","title":"数组逆序实现","index":"4.2"},{"id":"函数与二维数组","title":"函数与二维数组","index":"4.3"},{"id":"函数与字符数组","title":"函数与字符数组","index":"4.4"}]},{"id":"函数与指针","title":"函数与指针","index":"5","children":[{"id":"指针函数-(返回值为指针)","title":"指针函数 (返回值为指针)","index":"5.1"},{"id":"函数指针","title":"函数指针","index":"5.2"},{"id":"函数指针数组","title":"函数指针数组","index":"5.3"},{"id":"指向指针函数的函数指针数组","title":"指向指针函数的函数指针数组","index":"5.4"}]},{"id":"总结","title":"总结","index":"6"}]}