{"title":"段错误","date":"2024-02-06T05:10:50.000Z","date_formatted":{"ll":"2024年2月6日","L":"2024/02/06","MM-DD":"02-06"},"author":"Chong","thumbnail":"2024/段错误/./apple.png","link":"2024/段错误","comments":true,"updated":"2024-11-30T03:56:45.000Z","content":"<p>段错误（Segmentation Fault）是一种常见的运行时错误，通常发生在<strong>访问未分配的内存</strong>或者<strong>试图读写不允许访问的内存区域</strong>时。虽然段错误本身是一个简单的错误，但却可能导致程序不可预测的行为，甚至是崩溃，在Linux中也会导致许多软件无法正常运行。</p>\n<span id=\"more\"></span>\n<h4 id=\"段错误的原因\">段错误的原因<a title=\"#段错误的原因\" href=\"#段错误的原因\"></a></h4>\n<h5 id=\"未分配的内存\">未分配的内存<a title=\"#未分配的内存\" href=\"#未分配的内存\"></a></h5>\n<p>当程序试图<strong>访问未经分配的内存</strong>区域时，会触发段错误。这可能是因为 <em>忘记分配内存</em> 或者 <em>试图访问已经释放的内存</em>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int *ptr;</span><br><span class=\"line\">*ptr = 10;      // 未分配内存</span><br></pre></td></tr></table></figure>\n<p>定义了指针要为其分配内存才能使用，我们平时直接指向变量、数组等，好像并没有分配内存也直接用了，其实你在定义变量、数组后，已经为变量，数组分配了空间，你让指针指向它们，是可以直接使用的。</p>\n<h5 id=\"内存越界\">内存越界<a title=\"#内存越界\" href=\"#内存越界\"></a></h5>\n<p>尝试访问数组或其他数据结构的超出边界的元素，导致访问了不允许访问的内存区域。</p>\n<h5 id=\"空指针引用\">空指针引用<a title=\"#空指针引用\" href=\"#空指针引用\"></a></h5>\n<p>试图使用空指针访问内存中的数据，导致段错误。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int *ptr = NULL;</span><br><span class=\"line\">int value = *ptr; // 空指针引用，导致段错误</span><br></pre></td></tr></table></figure>\n<p>还有在释放了内存后，通常将指针指向 NULL, 防止之后访问该指针，如果之后又访问了该指针就会报段错误</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int main () &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    int *p = NULL;</span><br><span class=\"line\"></span><br><span class=\"line\">    p = malloc (sizeof (int));      </span><br><span class=\"line\">    if (p == NULL) &#123;</span><br><span class=\"line\">        printf (&quot;malloc () error!&quot;);</span><br><span class=\"line\">        exit (1);                          </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    *p = 11;</span><br><span class=\"line\">    printf(&quot;%d\\n&quot;, *p);</span><br><span class=\"line\"></span><br><span class=\"line\">    free (p);                       // 释放空间</span><br><span class=\"line\">    p = NULL;                       // 防止后面访问                              </span><br><span class=\"line\"></span><br><span class=\"line\">    exit (0);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"栈溢出\">栈溢出<a title=\"#栈溢出\" href=\"#栈溢出\"></a></h5>\n<p>当递归函数调用层级太深或者局部变量占用过多栈空间时，可能导致栈溢出，触发段错误。</p>\n<h5 id=\"未初始化的指针\">未初始化的指针<a title=\"#未初始化的指针\" href=\"#未初始化的指针\"></a></h5>\n<p>使用未初始化的指针进行内存访问，会引发段错误。</p>\n<h5 id=\"内存保护\">内存保护<a title=\"#内存保护\" href=\"#内存保护\"></a></h5>\n<p>一些操作系统或硬件平台会对某些内存区域进行保护，试图修改这些区域的内容会导致段错误。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const char *str = &quot;Hello, World!&quot;;</span><br><span class=\"line\">str[0] = &#x27;h&#x27;; // 尝试修改只读内存，导致段错误</span><br></pre></td></tr></table></figure>\n<h5 id=\"文件操作错误\">文件操作错误<a title=\"#文件操作错误\" href=\"#文件操作错误\"></a></h5>\n<p>尝试读写一个不可访问的文件或者试图操作不存在的文件也可能引发段错误。</p>\n","prev":{"title":"重定义 typedef","link":"2024/重定义-typedef"},"next":{"title":"动态内存管理","link":"2024/动态内存管理"},"plink":"https://CHONG589.github.io/2024/段错误/"}