{"title":"list.c","date":"2024-03-12T12:48:00.000Z","date_formatted":{"ll":"2024年3月12日","L":"2024/03/12","MM-DD":"03-12"},"updated":"2024-03-12T12:48:39.713Z","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;stdio.h&gt;</span><br><span class=\"line\">#include &lt;stdlib.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#include &quot;list.h&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">stu_node *list_insert1 (stu_node *list, score *data) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *new;</span><br><span class=\"line\"></span><br><span class=\"line\">    new = malloc (sizeof (*new));</span><br><span class=\"line\">    if (new == NULL) &#123;</span><br><span class=\"line\">        return NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    new -&gt; data = *data;</span><br><span class=\"line\">    // new -&gt; next = NULL;</span><br><span class=\"line\"></span><br><span class=\"line\">    new -&gt; next = list;</span><br><span class=\"line\">    list = new;</span><br><span class=\"line\"></span><br><span class=\"line\">    return list;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 因为工程中最好还是用 int 作为返回值，这样在判断错误的时候才能具体知道是那种错误，</span><br><span class=\"line\">// 如：-1 表示内存分配失败，-2 表示参数不对......,而若用指针作为返回值，这样全部错</span><br><span class=\"line\">// 误都为 NULL 表示，具体哪种错误就很难知道。</span><br><span class=\"line\">int list_insert (stu_node **list, score *data) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *new;</span><br><span class=\"line\"></span><br><span class=\"line\">    new = malloc (sizeof (*new));</span><br><span class=\"line\">    if (new == NULL) &#123;</span><br><span class=\"line\">        return -1;          // 分配内存失败</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    new -&gt; data = *data;</span><br><span class=\"line\"></span><br><span class=\"line\">    new -&gt; next = *list;</span><br><span class=\"line\">    *list = new;</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void list_show (stu_node *list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *cur;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (cur = list; cur != NULL; cur = cur -&gt; next) &#123;</span><br><span class=\"line\">        printf (&quot;%d %s %d %d\\n&quot;, cur -&gt; data.id, cur -&gt; data.name, cur -&gt; data.math, cur -&gt; data.chinese);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int list_delete (stu_node **list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *cur;</span><br><span class=\"line\"></span><br><span class=\"line\">    if (*list == NULL) &#123;</span><br><span class=\"line\">        return -1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cur = *list;</span><br><span class=\"line\">    *list = (*list) -&gt; next;</span><br><span class=\"line\"></span><br><span class=\"line\">    free (cur);</span><br><span class=\"line\"></span><br><span class=\"line\">    return 0;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int list_find (stu_node *list, int id) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *cur;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (cur = list; cur != NULL; cur = cur -&gt; next) &#123;</span><br><span class=\"line\">        if (cur -&gt; data.id == id) &#123;</span><br><span class=\"line\">            printf (&quot;%d %s %d %d\\n&quot;, cur -&gt;data.id, cur -&gt;data.name, cur -&gt; data.math, cur -&gt; data.chinese);</span><br><span class=\"line\">            return 0 ;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return -1;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void list_destroy (stu_node *list) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    stu_node *cur;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (list == NULL) &#123;</span><br><span class=\"line\">        return ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    for (cur = list; cur != NULL; cur = list) &#123;</span><br><span class=\"line\">        list = cur -&gt; next;</span><br><span class=\"line\">        free (cur);</span><br><span class=\"line\">        cur = NULL;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","link":"Learn/linklist/nohead/list-c","comments":true,"plink":"https://CHONG589.github.io/Learn/linklist/nohead/list-c/","reward":true,"copyright":{"published":"2024年3月12日","updated":"2024年3月12日","author":"Chong","link":"<a href=\"https://CHONG589.github.io/Learn/linklist/nohead/list-c/\" title=\"list.c\">https://CHONG589.github.io/Learn/linklist/nohead/list-c/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}